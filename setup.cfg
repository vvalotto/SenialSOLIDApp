[metadata]
name = SenialSOLIDApp
version = 2.0.0
description = Domain-Driven Design Signal Processing Application with SOLID Principles
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/vvalotto/SenialSOLIDApp
author = Victor Valotto
author_email = vvalotto@gmail.com
license = MIT
license_file = LICENSE
classifier =
    Development Status :: 4 - Beta
    Intended Audience :: Education
    Intended Audience :: Developers
    Topic :: Software Development :: Libraries :: Application Frameworks
    Topic :: Education
    Topic :: Scientific/Engineering :: Information Analysis
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12

[options]
python_requires = >=3.11
packages = find:
install_requires =
    flask>=2.3.0
    flask-bootstrap>=3.3.7.1
    flask-moment>=1.0.5
    flask-wtf>=1.1.1
    flask-sqlalchemy>=3.0.0
    wtforms>=3.0.0
    python-dotenv>=1.0.0
    pyyaml>=6.0
    click>=8.1.0

[options.packages.find]
include =
    aplicacion*
    dominio*
    infraestructura*
    presentacion*

[options.entry_points]
console_scripts =
    senial-console = presentacion.consola.lanzador:main
    senial-webapp = presentacion.webapp.views:main

# =============================================================================
# FLAKE8 CONFIGURATION
# =============================================================================
[flake8]
# Base flake8 configuration
max-line-length = 100
max-complexity = 10
show-source = True
statistics = True
count = True

# File patterns to exclude
exclude =
    .git,
    __pycache__,
    .venv,
    venv,
    .env,
    env,
    .tox,
    .coverage,
    .coverage.*,
    coverage.xml,
    *.cover,
    *.py,cover,
    .hypothesis,
    .pytest_cache,
    build,
    dist,
    *.egg-info,
    docs/_build,
    .mypy_cache,
    .idea,
    node_modules,
    migrations,
    logs,
    test_reports

# Error codes to ignore
ignore =
    E203,  # whitespace before ':' (conflicts with black)
    E501,  # line too long (handled by black)
    W503,  # line break before binary operator (conflicts with black)
    W504,  # line break after binary operator (conflicts with black)
    E231,  # missing whitespace after ',' (handled by black)
    E302,  # expected 2 blank lines (sometimes conflicts with black)
    F401,  # imported but unused (handled by other tools)
    F841,  # local variable assigned but never used (common in development)

# Error codes to specifically check for
select =
    E,     # pycodestyle errors
    W,     # pycodestyle warnings
    F,     # pyflakes
    C90,   # mccabe complexity

# Per-file ignores for specific patterns
per-file-ignores =
    __init__.py:F401,E402
    tests/*:F401,F811,F841,E501
    docs/*:E501
    config/*:E501
    scripts/*:E501
    */migrations/*:E501,F401
    demo_*.py:E501,F401
    test_*.py:F401,F811,F841
    run_*.py:E501,F401

# Flake8 extensions configuration
# flake8-docstrings
docstring-convention = google
ignore-decorators = @property,@staticmethod,@classmethod

# flake8-import-order
import-order-style = google
application-import-names = aplicacion,dominio,infraestructura,presentacion,config

# flake8-bugbear additional checks
extend-ignore =
    B008,  # Do not perform function calls in argument defaults
    B902,  # Invalid first argument used for method
    B903,  # Use of `assert` detected outside of tests

# =============================================================================
# ISORT CONFIGURATION (compatible with black)
# =============================================================================
[isort]
profile = black
multi_line_output = 3
line_length = 100
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
split_on_trailing_comma = True
force_single_line = False
combine_as_imports = True
order_by_type = False

# Import sections
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
known_first_party = aplicacion,dominio,infraestructura,presentacion,config
known_third_party =
    flask,
    wtforms,
    sqlalchemy,
    pytest,
    click,
    yaml,
    cerberus,
    jsonschema

# Files to skip
skip =
    .git,
    __pycache__,
    .venv,
    venv,
    .env,
    env,
    .tox,
    build,
    dist,
    *.egg-info,
    migrations,
    node_modules

skip_glob =
    */migrations/*
    */static/*
    */templates/*

# =============================================================================
# COVERAGE CONFIGURATION
# =============================================================================
[coverage:run]
source = .
omit =
    */tests/*
    */test_*
    */venv/*
    */.venv/*
    */env/*
    */.env/*
    */__pycache__/*
    */migrations/*
    */static/*
    */templates/*
    */node_modules/*
    build/*
    dist/*
    *.egg-info/*
    .tox/*
    .git/*
    docs/*
    scripts/*
    demo_*.py
    run_*.py
    test_*.py
    functional_test.py

branch = True
parallel = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
    # Type checking imports
    if TYPE_CHECKING:

show_missing = True
precision = 2
skip_covered = False
skip_empty = False

[coverage:html]
directory = htmlcov
title = SenialSOLIDApp Coverage Report

[coverage:xml]
output = coverage.xml

# =============================================================================
# MYPY CONFIGURATION (basic settings, will be extended in mypy.ini)
# =============================================================================
[mypy]
python_version = 3.11
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = True
disallow_untyped_decorators = False
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True
show_error_codes = True
show_error_context = True

# Per-module options for gradual typing
[mypy-tests.*]
disallow_untyped_defs = False
disallow_incomplete_defs = False

[mypy-docs.*]
ignore_errors = True

[mypy-migrations.*]
ignore_errors = True
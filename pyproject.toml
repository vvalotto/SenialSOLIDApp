[project]
name = "SenialSOLIDApp"
version = "2.0.0"
description = "Domain-Driven Design Signal Processing Application with SOLID Principles"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Victor Valotto", email = "vvalotto@gmail.com"}
]
maintainers = [
    {name = "Victor Valotto", email = "vvalotto@gmail.com"}
]
keywords = [
    "domain-driven-design",
    "solid-principles", 
    "signal-processing",
    "flask",
    "education",
    "architecture",
    "python"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Education",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11"
dependencies = [
    "flask>=2.3.0",
    "flask-bootstrap>=3.3.7.1",
    "flask-moment>=1.0.5", 
    "flask-wtf>=1.1.1",
    "flask-sqlalchemy>=3.0.0",
    "wtforms>=3.0.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    "click>=8.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-flask>=1.2.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pre-commit>=3.3.0",
    "radon>=6.0.0",
    "pylint>=2.17.0",
    # SSA-27 Documentation Tools
    "pydocstyle>=6.3.0",
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]
quality = [
    # SSA-25 Quality Tools
    "pylint>=2.17.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "radon>=6.0.0",
    "coverage>=7.3.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pre-commit>=3.3.0",
    # Flake8 Extensions
    "flake8-docstrings>=1.7.0",
    "flake8-import-order>=0.18.2",
    "flake8-bugbear>=23.0.0",
    # Type checking extensions
    "types-PyYAML>=6.0.0",
    "types-requests>=2.31.0",
    # SSA-27 Documentation Tools
    "pydocstyle>=6.3.0",
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]
docs = [
    # SSA-27 Documentation Generation
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "pydocstyle>=6.3.0",
    "myst-parser>=2.0.0",
    "sphinx-copybutton>=0.5.2",
    "sphinxcontrib-mermaid>=0.9.2",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0", 
    "pytest-mock>=3.11.0",
    "pytest-flask>=1.2.0",
    "coverage>=7.3.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
"Homepage" = "https://github.com/vvalotto/SenialSOLIDApp"
"Bug Tracker" = "https://vvalotto.atlassian.net/jira/software/projects/SSA/issues"
"Documentation" = "https://vvalotto.atlassian.net/wiki/spaces/~62acd5154639000068d60d4a/pages/147685377/"
"Source Code" = "https://github.com/vvalotto/SenialSOLIDApp"
"Changelog" = "https://github.com/vvalotto/SenialSOLIDApp/blob/master/CHANGELOG.md"

[project.scripts]
senial-console = "presentacion.consola.lanzador:main"
senial-webapp = "presentacion.webapp.views:main"
# SSA-25 Quality Scripts
quality-check = "scripts.quality_check:main"
quality-report = "scripts.generate_reports:main"
# SSA-27 Documentation Scripts
generate-docs = "scripts.generate_docs:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["aplicacion*", "dominio*", "infraestructura*", "presentacion*", "config*", "scripts*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=.",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=json",
    "--cov-fail-under=70",  # SSA-25 baseline
    "--verbose",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "quality: Quality gate tests",
    "security: Security-related tests",
]
# Quality-specific test configuration
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.bandit]
exclude_dirs = ["tests", "venv", "docs", "scripts"]
skips = ["B101", "B601"]
# SSA-25 Security Configuration
confidence_level = "medium"
severity_level = "medium"

# =============================================================================
# SSA-25 QUALITY TOOLS CONFIGURATION
# =============================================================================

[tool.pylint.main]
# SSA-25 Pylint Configuration
score = true
jobs = 0
confidence = ["HIGH", "CONTROL_FLOW", "INFERENCE", "INFERENCE_FAILURE", "UNDEFINED"]

[tool.pylint.messages_control]
# SSA-25 Custom disable rules for DDD patterns
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "too-few-public-methods",
    "too-many-arguments",
    "line-too-long",  # Handled by black
    "invalid-name",   # DDD naming patterns
]

[tool.pylint.reports]
output-format = "text"
reports = false

[tool.pylint.format]
max-line-length = 100

[tool.flake8]
# SSA-25 Flake8 configuration (referenced from setup.cfg)
max-line-length = 100
max-complexity = 10
ignore = ["E203", "W503", "E501"]
per-file-ignores = [
    "__init__.py:F401,E402",
    "tests/*:F401,F811,F841,E501",
]

[tool.radon]
# SSA-25 Radon configuration
exclude = "tests/*,migrations/*,static/*,templates/*"
ignore = "venv,__pycache__,.git"

[tool.ssa25_quality]
# SSA-25 Specific Quality Configuration
baseline_date = "2025-09-20"
current_sprint = 3

[tool.ssa25_quality.metrics]
pylint_threshold = 8.0
coverage_threshold = 70.0
complexity_threshold = 10
maintainability_threshold = 20.0
type_coverage_threshold = 50.0
# SSA-27 Documentation Quality Metrics
docstring_coverage_threshold = 90.0
documentation_lint_threshold = 9.0
api_documentation_coverage = 100.0

[tool.ssa25_quality.modules]
# Quality standards by module
domain = { pylint = 8.5, coverage = 90.0, complexity = 8, docstring_coverage = 95.0 }
application = { pylint = 8.0, coverage = 85.0, complexity = 10, docstring_coverage = 90.0 }
infrastructure = { pylint = 7.5, coverage = 75.0, complexity = 12, docstring_coverage = 80.0 }
presentation = { pylint = 7.0, coverage = 65.0, complexity = 15, docstring_coverage = 70.0 }

[tool.ssa25_quality.tools]
# Tools execution configuration
pylint = { enabled = true, config = ".pylintrc" }
flake8 = { enabled = true, config = "setup.cfg" }
mypy = { enabled = true, config = "mypy.ini" }
radon = { enabled = true, config = ".radon.cfg" }
coverage = { enabled = true, config = ".coveragerc" }
bandit = { enabled = true, config = "pyproject.toml" }
# SSA-27 Documentation Tools
pydocstyle = { enabled = true, config = ".pydocstyle" }
sphinx = { enabled = true, config = "docs/sphinx/conf.py" }

[tool.ssa25_quality.reporting]
# Reporting configuration
dashboard_enabled = true
json_reports = true
html_reports = true
email_notifications = false

[tool.ssa25_quality.integration]
# CI/CD Integration settings
github_actions = false  # Enable in Sprint 4
pre_commit_hooks = true
quality_gates_blocking = true

# =============================================================================
# SSA-27 DOCUMENTATION TOOLS CONFIGURATION
# =============================================================================

[tool.pydocstyle]
# SSA-27 Google Style Docstring Configuration
convention = "google"
add-ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D213",  # Multi-line docstring summary should start at the second line
    "D203",  # 1 blank line required before class docstring
]
match-dir = "(?!tests|migrations|static|templates).*"
match = "(?!test_|demo_|run_).*\\.py"
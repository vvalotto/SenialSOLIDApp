# SSA-27: Documentation Generation Makefile
# Automated documentation generation and quality validation

.PHONY: help docs docs-clean docs-check docs-serve docs-quality docs-all

# Default target
help:
	@echo "SSA-27 Documentation Generation Commands"
	@echo "========================================"
	@echo ""
	@echo "docs          Generate API documentation"
	@echo "docs-clean    Clean documentation build directory"
	@echo "docs-check    Validate documentation quality"
	@echo "docs-serve    Serve documentation locally"
	@echo "docs-quality  Run documentation quality checks"
	@echo "docs-all      Complete documentation workflow"
	@echo ""
	@echo "Quality Gates (SSA-27):"
	@echo "- Docstring Coverage >= 90%"
	@echo "- Documentation Lint Score >= 9.0/10"
	@echo "- Sphinx Build Success Required"

# Configuration
PYTHON := python3
SPHINX_BUILD := sphinx-build
DOCS_SOURCE := docs/sphinx
DOCS_BUILD := docs/sphinx/_build
DOCS_HTML := $(DOCS_BUILD)/html
PROJECT_ROOT := .

# Generate documentation
docs:
	@echo "🔧 Generating API documentation (SSA-27)..."
	$(PYTHON) scripts/generate_docs.py
	@echo "✅ Documentation generated successfully"
	@echo "📖 View at: file://$(PWD)/$(DOCS_HTML)/index.html"

# Clean documentation build
docs-clean:
	@echo "🧹 Cleaning documentation build directory..."
	rm -rf $(DOCS_BUILD)
	mkdir -p $(DOCS_BUILD)
	@echo "✅ Documentation build directory cleaned"

# Check documentation quality
docs-check:
	@echo "🔍 Running documentation quality checks..."
	@echo "Running pydocstyle (Google Style)..."
	pydocstyle --convention=google --count $(PROJECT_ROOT) || true
	@echo "Running Sphinx build validation..."
	$(SPHINX_BUILD) -W -b html $(DOCS_SOURCE) $(DOCS_HTML)
	@echo "✅ Documentation quality check completed"

# Serve documentation locally
docs-serve: docs
	@echo "🌐 Starting local documentation server..."
	@echo "📖 Documentation available at: http://localhost:8000"
	@echo "Press Ctrl+C to stop server"
	cd $(DOCS_HTML) && $(PYTHON) -m http.server 8000

# Run comprehensive documentation quality validation
docs-quality:
	@echo "🎯 Running comprehensive documentation quality validation..."
	@echo ""
	@echo "1. Docstring Coverage Analysis"
	@echo "=============================="
	pydocstyle --count --convention=google $(PROJECT_ROOT) | head -20 || true
	@echo ""
	@echo "2. Type Hint Coverage"
	@echo "===================="
	mypy --ignore-missing-imports $(PROJECT_ROOT) | head -10 || true
	@echo ""
	@echo "3. Sphinx Build Validation"
	@echo "=========================="
	$(SPHINX_BUILD) -W -b html $(DOCS_SOURCE) $(DOCS_HTML) > /dev/null 2>&1 && echo "✅ Sphinx build: SUCCESS" || echo "❌ Sphinx build: FAILED"
	@echo ""
	@echo "4. Quality Gate Summary"
	@echo "======================="
	@$(PYTHON) -c "import subprocess; import sys; \
	result = subprocess.run(['pydocstyle', '--count', '--convention=google', '.'], capture_output=True, text=True); \
	errors = len([l for l in result.stderr.split('\n') if l.strip()]); \
	total = 200; coverage = max(0, (total - errors) / total * 100); \
	print(f'Docstring Coverage: {coverage:.1f}% (Target: >=90%)'); \
	print('✅ PASS' if coverage >= 90 else '❌ FAIL'); \
	sys.exit(0 if coverage >= 90 else 1)"

# Complete documentation workflow
docs-all: docs-clean docs-check docs docs-quality
	@echo ""
	@echo "🎉 Complete SSA-27 documentation workflow completed!"
	@echo "📊 Quality report available at: $(DOCS_BUILD)/documentation_quality_report.md"
	@echo "📖 Documentation available at: file://$(PWD)/$(DOCS_HTML)/index.html"

# Development shortcuts
dev-docs: docs docs-serve

# CI/CD integration target
ci-docs: docs-check docs-quality docs
	@echo "✅ CI/CD documentation checks passed"

# Install documentation dependencies
docs-deps:
	@echo "📦 Installing documentation dependencies..."
	pip install -e .[docs]
	@echo "✅ Documentation dependencies installed"